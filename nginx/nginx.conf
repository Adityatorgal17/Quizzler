events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript;

    upstream backend {
        server backend:8000;
    }

    # HTTP â†’ HTTPS redirect
    server {
        listen 80;
        server_name quizzler-backend.adityatorgal.me;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name quizzler-backend.adityatorgal.me;

        ssl_certificate /etc/letsencrypt/live/quizzler-backend.adityatorgal.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/quizzler-backend.adityatorgal.me/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Main API location
        location / {
            # CORS headers (nginx handles all CORS now)
            add_header Access-Control-Allow-Origin "https://quizzler.adityatorgal.me" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, X-Requested-With" always;

            # Handle OPTIONS preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://backend;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # All realtime routes (including WebSocket and HTTP endpoints)
        location /realtime/ {
            # CORS headers for all realtime routes
            add_header Access-Control-Allow-Origin "https://quizzler.adityatorgal.me" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, X-Requested-With" always;

            # Handle OPTIONS preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # WebSocket headers (will be ignored for non-WebSocket requests)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for WebSocket connections
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 7d;
        }
    }
}
